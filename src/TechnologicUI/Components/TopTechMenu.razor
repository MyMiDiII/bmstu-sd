@using BusinessLogic.Models

@inject NavigationManager NavigationManager
@inject BusinessLogic.Services.IUserService UserService

<Bar Breakpoint="Breakpoint.Desktop"
     Background="Background.Primary"
     ThemeContrast="ThemeContrast.Light">
    <BarIcon IconName="customIcon" />
    <BarBrand>
        <BarItem>
            <BarLink To="">
                ИгроМир
            </BarLink>
        </BarItem>
    </BarBrand>
    <BarToggler />
    <BarMenu>
        <BarStart>
@*            <BarItem>
                <SelectList TItem="User"
                            TValue="User"
                            TextField="@((item)=>item.Name)"
                            SelectedValue="@curUser"
                            Data="@users" />
            </BarItem>
*@
            <BarItem>
                <BarLink To="/events" TextColor="TextColor.White">Игротеки</BarLink>
            </BarItem>
            <BarItem>
                <BarLink To="/games" TextColor="TextColor.White">Игры</BarLink>
            </BarItem>
        </BarStart>
        <BarEnd>
            <BarItem>
                @if (curUser.Name == "guest")
                {
                    <Button Color="Color.Primary" Clicked="@OnRegClicked">Регистрация</Button>
                    <Button Color="Color.Success" Clicked="@OnLoginClicked">Вход</Button>
                }
                else
                {
                    <BarDropdown>
                        <BarDropdownToggle>С возвращением, @curUser.Name!</BarDropdownToggle>
                        <BarDropdownMenu Width="Width.Is100">
                            <BarDropdownItem Clicked="@GoToMyGames">Мои настолки</BarDropdownItem>
                            <BarDropdownItem Clicked="@GoToMyEvents">Мои игротеки</BarDropdownItem>
                            <BarDropdownDivider/>
                            <BarDropdownItem Clicked="@Logout">Выход</BarDropdownItem>
                        </BarDropdownMenu>
                    </BarDropdown>
                }
            </BarItem>
        </BarEnd>
    </BarMenu>
</Bar>

<Login @ref=@loginModal/>

<Register @ref=@registerModal/>

@code {
    RenderFragment customIcon =@<img src="/board-game.png" style="width:52px; height:52px" /> ;

    List<User> users = new List<User>();
    User curUser;

    private Login? loginModal;
    private Register? registerModal;

    protected override void OnInitialized()
    {
        for (int i = 1; i <= 4; ++i)
        {
            users.Add(UserService.GetUserByID(i) ?? new User("", ""));
        }
        curUser = UserService.GetCurrentUser();
    }

    Task OnLoginClicked()
    {
        loginModal?.Show();

        return Task.CompletedTask;
    }

    Task OnRegClicked()
    {
        registerModal?.Show();

        return Task.CompletedTask;
    }

    public void Logout()
    {
        var req = new LoginRequest("guest", "guest");
        UserService.Login(req);
        curUser = UserService.GetCurrentUser();
        NavigationManager.NavigateTo(NavigationManager.Uri, true);
    }

    public void GoToMyEvents()
    {
        NavigationManager.NavigateTo("my-events", true);
    }

    public void GoToMyGames()
    {
        NavigationManager.NavigateTo("my-games", true);
    }
}