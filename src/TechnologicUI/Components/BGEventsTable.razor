@using BusinessLogic.Models

@*@inject NavigationManager NavigationManager
          RowDoubleClicked="@(() => NavigationManager.NavigateTo("/"))"
*@

@inject BusinessLogic.Services.IBoardGameEventService BoardGameEventService 

<DataGrid TItem="EventView"
          Data="@viewEvents"
          PageSize="6"
          ShowPager
          Sortable
          Striped
          >
    <DataGridColumns>
        <DataGridColumn Caption="Название" Editable >
            <DisplayTemplate>
                @{
                    var bgEvent = context as EventView;
                    var link = "/event/" + bgEvent?.ID.ToString();
                    var title = bgEvent?.Title;
                }
                <Link To="@link" TextColor="TextColor.Dark">@title</Link>
            </DisplayTemplate>
        </DataGridColumn>
        <DataGridColumn Field="@nameof(EventView.Date)" Caption="Дата" Editable />
        <DataGridColumn Field="@nameof(EventView.StartTimeView)" Caption="Начало" />
        <DataGridColumn Field="@nameof(EventView.DurationView)" Caption="Продолжительность" />
        <DataGridColumn Field="@nameof(EventView.Cost)" Caption="Стоимость"
                        DisplayFormat="{0:C0}" Editable />
        <DataGridColumn Field="@nameof(EventView.PurchaseView)" Caption="Покупки игр" Editable />
        <DataGridColumn Caption="Статус" Editable Sortable>
           <DisplayTemplate>
                @{
                    var view = context as EventView;
                    var color = view?.StateColor;
                    var name = view?.StateName;
                }
               <Badge Color="@color">@name</Badge>
            </DisplayTemplate>
        </DataGridColumn>
    </DataGridColumns>
    <NextPageButtonTemplate><Icon Name="IconName.StepForward" /></NextPageButtonTemplate>
    <PreviousPageButtonTemplate><Icon Name="IconName.StepBackward" /></PreviousPageButtonTemplate>
    <LastPageButtonTemplate><Icon Name="IconName.Forward" /></LastPageButtonTemplate>
    <FirstPageButtonTemplate><Icon Name="IconName.Backward" /></FirstPageButtonTemplate>
    <TotalItemsTemplate><Badge Color="Color.Primary">Всего @context.TotalItems игротек</Badge></TotalItemsTemplate>
</DataGrid>

@if (ColorHint)
{
    <CardBody Flex="Flex.JustifyContent.Around">
        <Badge Color="Color.Warning">Запланирована</Badge>
        <Badge Color="Color.Success">Регистрация</Badge>
        <Badge Color="Color.Info">Скоро начнется</Badge>
        <Badge Color="Color.Secondary">Идет</Badge>
        <Badge Color="Color.Dark">Проведена</Badge>
        <Badge Color="Color.Danger">Отменена</Badge>
    </CardBody>
}

@code {
    [Parameter]
    public bool ColorHint { get; set; } = false;
    [Parameter]
    public List<BoardGameEvent> Events { get; set; } = new List<BoardGameEvent>();

    private List<EventView> viewEvents = new List<EventView>();

    protected override void OnInitialized()
    {
        foreach(var bgEvent in Events)
        {
            viewEvents.Add(new EventView(bgEvent));
        }
        base.OnInitialized();
    }
}
